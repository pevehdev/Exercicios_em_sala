# -*- coding: utf-8 -*-
"""Exercicio_em_Sala.py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DkzUFXXVCC44T8pb49xmAjxRMDEFBlL1

Faça um programa que carregue uma lista com os modelos de cinco carros (exemplo de modelos: FUSCA, GOL, VECTRA etc). Carregue uma outra lista com o consumo desses carros, isto é, quantos quilômetros cada um desses carros faz com um litro de combustível. Calcule e mostre:
O modelo do carro mais econômico;
Quantos litros de combustível cada um dos carros cadastrados consome para percorrer uma distância de 1000 quilômetros e quanto isto custará, considerando um que a gasolina custe R$ 2,25 o litro. Abaixo segue uma tela de exemplo. O disposição das informações deve ser o mais próxima possível ao exemplo. Os dados são fictícios e podem mudar a cada execução do programa
"""

#Lista aninhada com cada modelo de carro com quilometros por litro, ou seja a cada 1KM o carro Buggati consome 49 Litros

carros = [
    ['Koenigsegg_Jesko_Absolut', 53],
    ['Hennessey_Venom_F5', 50],
    ['Bugatti', 49] ,
    ['Koenigsegg', 48] ,
    ['Tuatara', 46 ]
    ]
preco_combustivel = 2.25

def calcular_custo(modelo, consumo):
    litros_consumidos = 1000 / consumo
    custo = litros_consumidos * preco_combustivel
    return litros_consumidos, custo

# A variável abaixo percorre toda a sublista de carros, como temos duas posições, passamos no parametro x a posição que será feito a verificação de menor, pois
# posição [0] é o modelo, que não faria sentido em termos de comparação de menor valor pois é uma string. O [0] fora do parenteses da função min, é para exibir para o usuario
# o modelo do carro.
modelo_mais_economico = min(carros, key=lambda x: x[1])[0]
print("Modelo mais econômico:", modelo_mais_economico)

for carro in carros:
    modelo = carro[0]
    consumo = carro[1]
litros, custo = calcular_custo(modelo, consumo)
print(f"{modelo} consome: {litros:.2f} litros percorrendo 1000km, custando R$ {custo:.2f}")